// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.21.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

import 'api/canvas.dart';
import 'api/simple.dart';
import 'dart:async';
import 'dart:convert';
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_web.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  CanvasPoint dco_decode_box_autoadd_canvas_point(dynamic raw);

  @protected
  Line dco_decode_box_autoadd_line(dynamic raw);

  @protected
  MarqueeRect dco_decode_box_autoadd_marquee_rect(dynamic raw);

  @protected
  CanvasPoint dco_decode_canvas_point(dynamic raw);

  @protected
  double dco_decode_f_64(dynamic raw);

  @protected
  Line dco_decode_line(dynamic raw);

  @protected
  List<String> dco_decode_list_String(dynamic raw);

  @protected
  List<Line> dco_decode_list_line(dynamic raw);

  @protected
  List<Polygon> dco_decode_list_polygon(dynamic raw);

  @protected
  List<double> dco_decode_list_prim_f_64_loose(dynamic raw);

  @protected
  Float64List dco_decode_list_prim_f_64_strict(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  MarqueeRect dco_decode_marquee_rect(dynamic raw);

  @protected
  Polygon dco_decode_polygon(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  CanvasPoint sse_decode_box_autoadd_canvas_point(SseDeserializer deserializer);

  @protected
  Line sse_decode_box_autoadd_line(SseDeserializer deserializer);

  @protected
  MarqueeRect sse_decode_box_autoadd_marquee_rect(SseDeserializer deserializer);

  @protected
  CanvasPoint sse_decode_canvas_point(SseDeserializer deserializer);

  @protected
  double sse_decode_f_64(SseDeserializer deserializer);

  @protected
  Line sse_decode_line(SseDeserializer deserializer);

  @protected
  List<String> sse_decode_list_String(SseDeserializer deserializer);

  @protected
  List<Line> sse_decode_list_line(SseDeserializer deserializer);

  @protected
  List<Polygon> sse_decode_list_polygon(SseDeserializer deserializer);

  @protected
  List<double> sse_decode_list_prim_f_64_loose(SseDeserializer deserializer);

  @protected
  Float64List sse_decode_list_prim_f_64_strict(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  MarqueeRect sse_decode_marquee_rect(SseDeserializer deserializer);

  @protected
  Polygon sse_decode_polygon(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_canvas_point(
      CanvasPoint self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_line(Line self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_marquee_rect(
      MarqueeRect self, SseSerializer serializer);

  @protected
  void sse_encode_canvas_point(CanvasPoint self, SseSerializer serializer);

  @protected
  void sse_encode_f_64(double self, SseSerializer serializer);

  @protected
  void sse_encode_line(Line self, SseSerializer serializer);

  @protected
  void sse_encode_list_String(List<String> self, SseSerializer serializer);

  @protected
  void sse_encode_list_line(List<Line> self, SseSerializer serializer);

  @protected
  void sse_encode_list_polygon(List<Polygon> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_f_64_loose(
      List<double> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_f_64_strict(
      Float64List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_marquee_rect(MarqueeRect self, SseSerializer serializer);

  @protected
  void sse_encode_polygon(Polygon self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire implements BaseWire {
  RustLibWire.fromExternalLibrary(ExternalLibrary lib);
}

@JS('wasm_bindgen')
external RustLibWasmModule get wasmModule;

@JS()
@anonymous
class RustLibWasmModule implements WasmModule {
  @override
  external Object /* Promise */ call([String? moduleName]);

  @override
  external RustLibWasmModule bind(dynamic thisArg, String moduleName);
}
